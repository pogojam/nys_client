{"ast":null,"code":"var _jsxFileName = \"/Users/ryanbreaux/Projects/Web/Clients/nps_v2/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useReducer, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Nav from \"../lib/blocks/nav\";\nimport Reducer from \"../lib/reducers\";\nimport useObserver from \"../lib/interface/useObserver\";\nconst Body = styled.div.withConfig({\n  displayName: \"pages__Body\",\n  componentId: \"sc-1bxujxe-0\"\n})([\"height:200vh;\"]);\nconst Container = styled.div.withConfig({\n  displayName: \"pages__Container\",\n  componentId: \"sc-1bxujxe-1\"\n})([\"height:100vh;\"]);\nconst initalState = {\n  scrolled: false\n};\n\nfunction HomePage() {\n  const {\n    0: store,\n    1: dispatch\n  } = useReducer(Reducer.HomePage, initalState);\n  return __jsx(Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(Nav, {\n    show: store.scrolled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), __jsx(Container_1, {\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst Container_1 = ({\n  dispatch\n}) => {\n  console.log(dispatch);\n  const [ref, entries] = useObserver({\n    threshold: [0.75, 0.5, 0]\n  });\n\n  if (entries.isIntersecting) {\n    console.log(entries.boundingClientRect.y);\n    entries.boundingClientRect.y < 0 && dispatch({\n      type: \"SCROLLED\"\n    });\n  }\n\n  return __jsx(Container, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/ryanbreaux/Projects/Web/Clients/nps_v2/pages/index.js"],"names":["useReducer","useEffect","styled","Nav","Reducer","useObserver","Body","div","Container","initalState","scrolled","HomePage","store","dispatch","Container_1","console","log","ref","entries","threshold","isIntersecting","boundingClientRect","y","type"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,MAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,qBAAV;AAGA,MAAMC,SAAS,GAAGN,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,qBAAf;AAIA,MAAME,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE;AADQ,CAApB;;AAIA,SAASC,QAAT,GAAoB;AAClB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBb,UAAU,CAACI,OAAO,CAACO,QAAT,EAAmBF,WAAnB,CAApC;AAEA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAEG,KAAK,CAACF,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEG,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,MAAMC,WAAW,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAkB;AACpCE,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,QAAM,CAACI,GAAD,EAAMC,OAAN,IAAiBb,WAAW,CAAC;AACjCc,IAAAA,SAAS,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,CAAZ;AADsB,GAAD,CAAlC;;AAIA,MAAID,OAAO,CAACE,cAAZ,EAA4B;AAC1BL,IAAAA,OAAO,CAACC,GAAR,CAAYE,OAAO,CAACG,kBAAR,CAA2BC,CAAvC;AACAJ,IAAAA,OAAO,CAACG,kBAAR,CAA2BC,CAA3B,GAA+B,CAA/B,IAAoCT,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA5C;AACD;;AAED,SAAO,MAAC,SAAD;AAAW,IAAA,GAAG,EAAEN,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAZD;;AAcA,eAAeN,QAAf","sourcesContent":["import { useReducer, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Nav from \"../lib/blocks/nav\";\nimport Reducer from \"../lib/reducers\";\nimport useObserver from \"../lib/interface/useObserver\";\n\nconst Body = styled.div`\n  height: 200vh;\n`;\nconst Container = styled.div`\n  height: 100vh;\n`;\n\nconst initalState = {\n  scrolled: false\n};\n\nfunction HomePage() {\n  const [store, dispatch] = useReducer(Reducer.HomePage, initalState);\n\n  return (\n    <Body>\n      <Nav show={store.scrolled} />\n      <Container_1 dispatch={dispatch} />\n    </Body>\n  );\n}\n\nconst Container_1 = ({ dispatch }) => {\n  console.log(dispatch);\n  const [ref, entries] = useObserver({\n    threshold: [0.75, 0.5, 0]\n  });\n\n  if (entries.isIntersecting) {\n    console.log(entries.boundingClientRect.y);\n    entries.boundingClientRect.y < 0 && dispatch({ type: \"SCROLLED\" });\n  }\n\n  return <Container ref={ref}></Container>;\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}