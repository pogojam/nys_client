{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nexport const changeTo = (com, type) => {\n  com.target = type;\n  return com;\n};\nexport const withProps = (Component, _ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return __jsx(Component, props, children);\n};\nexport const buildThresholdList = numSteps => {\n  let thresholds = [];\n\n  for (let i = 1.0; i <= numSteps; i++) {\n    let ratio = i / numSteps;\n    thresholds.push(ratio);\n  }\n\n  thresholds.push(0);\n  return thresholds;\n};\nexport const locateTo = location => {\n  window.location.href = location;\n};\nexport const wrapComponent = (C1, C2) => {\n  return (_ref2) => {\n    let {\n      children\n    } = _ref2,\n        props = _objectWithoutProperties(_ref2, [\"children\"]);\n\n    return __jsx(C2, null, __jsx(C1, props, children));\n  };\n};","map":null,"metadata":{},"sourceType":"module"}