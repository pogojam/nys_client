{"ast":null,"code":"var _jsxFileName = \"/Users/ryanbreaux/Projects/Web/Clients/nps_v2/lib/components/buttons.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport styled from \"styled-components\";\n\nconst withProps = (Component, _ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return __jsx(Component, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 3\n    }\n  }), children);\n};\n\nconst Button = (_ref2) => {\n  let {\n    type\n  } = _ref2,\n      props = _objectWithoutProperties(_ref2, [\"type\"]);\n\n  console.log(Small);\n\n  switch (type) {\n    case \"Big\":\n      return withProps(Big, props);\n      break;\n\n    case \"Small\":\n      return withProps(Small, props);\n      break;\n\n    default:\n      return withProps(Standard, props);\n  }\n};\n\nconst Base = styled.button.withConfig({\n  displayName: \"buttons__Base\",\n  componentId: \"sc-5y7lfv-0\"\n})([\"padding:\", \";\"], ({\n  theme\n}) => theme.buttons);\nconst Small = styled(Base).withConfig({\n  displayName: \"buttons__Small\",\n  componentId: \"sc-5y7lfv-1\"\n})([\"\"]);\nconst Big = styled(Base).withConfig({\n  displayName: \"buttons__Big\",\n  componentId: \"sc-5y7lfv-2\"\n})([\"\"]);\nconst Standard = styled(Base).withConfig({\n  displayName: \"buttons__Standard\",\n  componentId: \"sc-5y7lfv-3\"\n})([\"\"]);\nexport default Button;","map":{"version":3,"sources":["/Users/ryanbreaux/Projects/Web/Clients/nps_v2/lib/components/buttons.js"],"names":["styled","withProps","Component","children","props","Button","type","console","log","Small","Big","Standard","Base","button","theme","buttons"],"mappings":";;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,SAAS,GAAG,CAACC,SAAD;AAAA,MAAY;AAAEC,IAAAA;AAAF,GAAZ;AAAA,MAA2BC,KAA3B;;AAAA,SAChB,MAAC,SAAD,eAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAuBD,QAAvB,CADgB;AAAA,CAAlB;;AAIA,MAAME,MAAM,GAAG,WAAwB;AAAA,MAAvB;AAAEC,IAAAA;AAAF,GAAuB;AAAA,MAAZF,KAAY;;AACrCG,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;;AACA,UAAQH,IAAR;AACE,SAAK,KAAL;AACE,aAAOL,SAAS,CAACS,GAAD,EAAMN,KAAN,CAAhB;AACA;;AACF,SAAK,OAAL;AACE,aAAOH,SAAS,CAACQ,KAAD,EAAQL,KAAR,CAAhB;AACA;;AACF;AACE,aAAOH,SAAS,CAACU,QAAD,EAAWP,KAAX,CAAhB;AARJ;AAUD,CAZD;;AAcA,MAAMQ,IAAI,GAAGZ,MAAM,CAACa,MAAV;AAAA;AAAA;AAAA,sBACG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,OADxB,CAAV;AAIA,MAAMN,KAAK,GAAGT,MAAM,CAACY,IAAD,CAAT;AAAA;AAAA;AAAA,QAAX;AAEA,MAAMF,GAAG,GAAGV,MAAM,CAACY,IAAD,CAAT;AAAA;AAAA;AAAA,QAAT;AAEA,MAAMD,QAAQ,GAAGX,MAAM,CAACY,IAAD,CAAT;AAAA;AAAA;AAAA,QAAd;AAEA,eAAeP,MAAf","sourcesContent":["import styled from \"styled-components\";\n\nconst withProps = (Component, { children, ...props }) => (\n  <Component {...props}>{children}</Component>\n);\n\nconst Button = ({ type, ...props }) => {\n  console.log(Small);\n  switch (type) {\n    case \"Big\":\n      return withProps(Big, props);\n      break;\n    case \"Small\":\n      return withProps(Small, props);\n      break;\n    default:\n      return withProps(Standard, props);\n  }\n};\n\nconst Base = styled.button`\n  padding: ${({ theme }) => theme.buttons};\n`;\n\nconst Small = styled(Base)``;\n\nconst Big = styled(Base)``;\n\nconst Standard = styled(Base)``;\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}