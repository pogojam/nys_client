{"ast":null,"code":"var __jsx = React.createElement;\nimport ReactDOM from \"react-dom\";\nimport React, { useRef, useEffect } from \"react\";\n\nvar callback = function callback() {\n  console.log(\"HI\");\n};\n\nfunction Observer(_ref) {\n  var _this = this;\n\n  var children = _ref.children;\n  var childRef = useRef();\n  useEffect(function () {\n    console.log(_this.refs);\n    var options = {\n      root: childRef,\n      rootMargin: \"0px\",\n      threshold: 1.0\n    };\n    var observer = new IntersectionObserver(callback, options);\n  }, []);\n  return __jsx(React.Fragment, null, React.Children.map(children, function (el, i) {\n    return React.cloneElement(el, {\n      ref: childRef\n    });\n  }));\n}\n\nexport default Observer;","map":{"version":3,"sources":["/Users/ryanbreaux/Projects/Web/Clients/nps_v2/lib/interface/observer.js"],"names":["ReactDOM","React","useRef","useEffect","callback","console","log","Observer","children","childRef","refs","options","root","rootMargin","threshold","observer","IntersectionObserver","Children","map","el","i","cloneElement","ref"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,CAFD;;AAIA,SAASC,QAAT,OAAgC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC9B,MAAMC,QAAQ,GAAGP,MAAM,EAAvB;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACI,IAAjB;AACA,QAAMC,OAAO,GAAG;AACdC,MAAAA,IAAI,EAAEH,QADQ;AAEdI,MAAAA,UAAU,EAAE,KAFE;AAGdC,MAAAA,SAAS,EAAE;AAHG,KAAhB;AAMA,QAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBZ,QAAzB,EAAmCO,OAAnC,CAAjB;AACD,GATQ,EASN,EATM,CAAT;AAWA,SACE,4BACGV,KAAK,CAACgB,QAAN,CAAeC,GAAf,CAAmBV,QAAnB,EAA6B,UAACW,EAAD,EAAKC,CAAL,EAAW;AACvC,WAAOnB,KAAK,CAACoB,YAAN,CAAmBF,EAAnB,EAAuB;AAAEG,MAAAA,GAAG,EAAEb;AAAP,KAAvB,CAAP;AACD,GAFA,CADH,CADF;AAOD;;AAED,eAAeF,QAAf","sourcesContent":["import ReactDOM from \"react-dom\";\nimport React, { useRef, useEffect } from \"react\";\n\nconst callback = () => {\n  console.log(\"HI\");\n};\n\nfunction Observer({ children }) {\n  const childRef = useRef();\n\n  useEffect(() => {\n    console.log(this.refs);\n    const options = {\n      root: childRef,\n      rootMargin: \"0px\",\n      threshold: 1.0\n    };\n\n    const observer = new IntersectionObserver(callback, options);\n  }, []);\n\n  return (\n    <>\n      {React.Children.map(children, (el, i) => {\n        return React.cloneElement(el, { ref: childRef });\n      })}\n    </>\n  );\n}\n\nexport default Observer;\n"]},"metadata":{},"sourceType":"module"}