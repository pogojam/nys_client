{"ast":null,"code":"var __jsx = React.createElement;\nimport ReactDOM from \"react-dom\";\nimport React, { useRef, useEffect } from \"react\";\n\nconst callback = () => {\n  console.log(\"HI\");\n};\n\nconst Observer = children => {\n  const childRef = useRef();\n  useEffect(() => {\n    const options = {\n      root: childRef,\n      rootMargin: \"0px\",\n      threshold: 1.0\n    };\n    const observer = new IntersectionObserver(callback, options);\n  }, []);\n  return __jsx(React.Fragment, null, React.Children.map(children, (el, i) => {\n    return i === 0 && React.cloneElement(element, {\n      ref: childRef\n    });\n  }));\n};\n\nexport default Observer;","map":{"version":3,"sources":["/Users/ryanbreaux/Projects/Web/Clients/nps_v2/lib/interface/observer.js"],"names":["ReactDOM","React","useRef","useEffect","callback","console","log","Observer","children","childRef","options","root","rootMargin","threshold","observer","IntersectionObserver","Children","map","el","i","cloneElement","element","ref"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,CAFD;;AAIA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAC3B,QAAMC,QAAQ,GAAGP,MAAM,EAAvB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,OAAO,GAAG;AACdC,MAAAA,IAAI,EAAEF,QADQ;AAEdG,MAAAA,UAAU,EAAE,KAFE;AAGdC,MAAAA,SAAS,EAAE;AAHG,KAAhB;AAKA,UAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBX,QAAzB,EAAmCM,OAAnC,CAAjB;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SACE,4BACGT,KAAK,CAACe,QAAN,CAAeC,GAAf,CAAmBT,QAAnB,EAA6B,CAACU,EAAD,EAAKC,CAAL,KAAW;AACvC,WAAOA,CAAC,KAAK,CAAN,IAAWlB,KAAK,CAACmB,YAAN,CAAmBC,OAAnB,EAA4B;AAAEC,MAAAA,GAAG,EAAEb;AAAP,KAA5B,CAAlB;AACD,GAFA,CADH,CADF;AAOD,CAnBD;;AAqBA,eAAeF,QAAf","sourcesContent":["import ReactDOM from \"react-dom\";\nimport React, { useRef, useEffect } from \"react\";\n\nconst callback = () => {\n  console.log(\"HI\");\n};\n\nconst Observer = children => {\n  const childRef = useRef();\n\n  useEffect(() => {\n    const options = {\n      root: childRef,\n      rootMargin: \"0px\",\n      threshold: 1.0\n    };\n    const observer = new IntersectionObserver(callback, options);\n  }, []);\n\n  return (\n    <>\n      {React.Children.map(children, (el, i) => {\n        return i === 0 && React.cloneElement(element, { ref: childRef });\n      })}\n    </>\n  );\n};\n\nexport default Observer;\n"]},"metadata":{},"sourceType":"module"}