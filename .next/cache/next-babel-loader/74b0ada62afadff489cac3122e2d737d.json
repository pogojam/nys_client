{"ast":null,"code":"var _jsxFileName = \"/Users/ryanbreaux/Projects/Web/Clients/nps_v2/lib/interface/useNav.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"../components\";\n\nconst useNav = (views, NavName) => {\n  const initalState = window.localStorage.getItem(NavName);\n  const viewKeys = Object.keys(views);\n  const {\n    0: view_name,\n    1: changeView\n  } = useState(initalState ? initalState : viewKeys[0]);\n  const {\n    0: Buttons,\n    1: setButtons\n  } = useState();\n  const ActiveView = views[view_name];\n  useEffect(() => {\n    const buttons = viewKeys.map(name => __jsx(Button, {\n      type: \"Nav\",\n      active: name === view_name ? true : false,\n      onClick: () => changeView(name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, name));\n    setButtons(buttons);\n    window.localStorage.setItem(NavName, view_name);\n  }, [view_name]);\n  return [Buttons, ActiveView, view_name];\n};\n\nexport default useNav;","map":{"version":3,"sources":["/Users/ryanbreaux/Projects/Web/Clients/nps_v2/lib/interface/useNav.js"],"names":["useState","useEffect","Button","useNav","views","NavName","initalState","window","localStorage","getItem","viewKeys","Object","keys","view_name","changeView","Buttons","setButtons","ActiveView","buttons","map","name","setItem"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAEA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACjC,QAAMC,WAAW,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BJ,OAA5B,CAApB;AACA,QAAMK,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYR,KAAZ,CAAjB;AACA,QAAM;AAAA,OAACS,SAAD;AAAA,OAAYC;AAAZ,MAA0Bd,QAAQ,CACtCM,WAAW,GAAGA,WAAH,GAAiBI,QAAQ,CAAC,CAAD,CADE,CAAxC;AAGA,QAAM;AAAA,OAACK,OAAD;AAAA,OAAUC;AAAV,MAAwBhB,QAAQ,EAAtC;AACA,QAAMiB,UAAU,GAAGb,KAAK,CAACS,SAAD,CAAxB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,OAAO,GAAGR,QAAQ,CAACS,GAAT,CAAcC,IAAD,IAC3B,MAAC,MAAD;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,MAAM,EAAEA,IAAI,KAAKP,SAAT,GAAqB,IAArB,GAA4B,KAFtC;AAGE,MAAA,OAAO,EAAE,MAAMC,UAAU,CAACM,IAAD,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGA,IALH,CADc,CAAhB;AASAJ,IAAAA,UAAU,CAACE,OAAD,CAAV;AACAX,IAAAA,MAAM,CAACC,YAAP,CAAoBa,OAApB,CAA4BhB,OAA5B,EAAqCQ,SAArC;AACD,GAZQ,EAYN,CAACA,SAAD,CAZM,CAAT;AAcA,SAAO,CAACE,OAAD,EAAUE,UAAV,EAAsBJ,SAAtB,CAAP;AACD,CAxBD;;AA0BA,eAAeV,MAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Button } from \"../components\";\n\nconst useNav = (views, NavName) => {\n  const initalState = window.localStorage.getItem(NavName);\n  const viewKeys = Object.keys(views);\n  const [view_name, changeView] = useState(\n    initalState ? initalState : viewKeys[0]\n  );\n  const [Buttons, setButtons] = useState();\n  const ActiveView = views[view_name];\n\n  useEffect(() => {\n    const buttons = viewKeys.map((name) => (\n      <Button\n        type=\"Nav\"\n        active={name === view_name ? true : false}\n        onClick={() => changeView(name)}\n      >\n        {name}\n      </Button>\n    ));\n    setButtons(buttons);\n    window.localStorage.setItem(NavName, view_name);\n  }, [view_name]);\n\n  return [Buttons, ActiveView, view_name];\n};\n\nexport default useNav;\n"]},"metadata":{},"sourceType":"module"}