{"ast":null,"code":"var _jsxFileName = \"/Users/ryanbreaux/Projects/Web/Clients/nps_v2/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport \"../lib/styles.css\";\nimport ApolloClient from \"apollo-client\";\nimport { StripeProvider } from \"react-stripe-elements\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport fetch from \"isomorphic-fetch\";\nconst httplink = new HttpLink({\n  uri: \"http://localhost:4000/api\",\n  credentials: \"include\"\n});\nexport const client = new ApolloClient({\n  link: httplink,\n  cache: new InMemoryCache(),\n  fetch\n});\nexport default function MyApp({\n  Component,\n  pageProps\n}) {\n  console.log(process.env.STRIPE_KEY);\n  return __jsx(StripeProvider, {\n    apiKey: process.env.STRIPE_KEY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/ryanbreaux/Projects/Web/Clients/nps_v2/pages/_app.js"],"names":["ApolloClient","StripeProvider","ApolloProvider","InMemoryCache","HttpLink","fetch","httplink","uri","credentials","client","link","cache","MyApp","Component","pageProps","console","log","process","env","STRIPE_KEY"],"mappings":";;;;;;AAAA,OAAO,mBAAP;AACA,OAAOA,YAAP,MAAyB,eAAzB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,MAAMC,QAAQ,GAAG,IAAIF,QAAJ,CAAa;AAC5BG,EAAAA,GAAG,EAAE,2BADuB;AAE5BC,EAAAA,WAAW,EAAE;AAFe,CAAb,CAAjB;AAKA,OAAO,MAAMC,MAAM,GAAG,IAAIT,YAAJ,CAAiB;AACrCU,EAAAA,IAAI,EAAEJ,QAD+B;AAErCK,EAAAA,KAAK,EAAE,IAAIR,aAAJ,EAF8B;AAGrCE,EAAAA;AAHqC,CAAjB,CAAf;AAMP,eAAe,SAASO,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACtDC,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,UAAxB;AACA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEF,OAAO,CAACC,GAAR,CAAYC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEV,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAOD","sourcesContent":["import \"../lib/styles.css\";\nimport ApolloClient from \"apollo-client\";\nimport { StripeProvider } from \"react-stripe-elements\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport fetch from \"isomorphic-fetch\";\n\nconst httplink = new HttpLink({\n  uri: \"http://localhost:4000/api\",\n  credentials: \"include\",\n});\n\nexport const client = new ApolloClient({\n  link: httplink,\n  cache: new InMemoryCache(),\n  fetch,\n});\n\nexport default function MyApp({ Component, pageProps }) {\n  console.log(process.env.STRIPE_KEY);\n  return (\n    <StripeProvider apiKey={process.env.STRIPE_KEY}>\n      <ApolloProvider client={client}>\n        <Component {...pageProps} />\n      </ApolloProvider>\n    </StripeProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}