{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport styled from \"styled-components\";\nimport Theme from \"../theme\";\nimport { withProps } from \"../util\";\nimport dumpStyles from \"./style_templates\";\nconst {\n  buttons: styles\n} = Theme;\n\nconst Button = (_ref) => {\n  let {\n    type\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"type\"]);\n\n  switch (type) {\n    case \"Big\":\n      return withProps(Big, props);\n      break;\n\n    case \"Small\":\n      return withProps(Small, props);\n      break;\n\n    case \"Tiny\":\n      return withProps(Tiny, props);\n      break;\n\n    case \"Nav\":\n      return withProps(Nav, props);\n      break;\n\n    default:\n      return withProps(Base, props);\n  }\n};\n\nconst Base = styled.button.withConfig({\n  displayName: \"Button__Base\",\n  componentId: \"cvrf7p-0\"\n})([\"&:focus{outline:none;}\", \"\"], dumpStyles(styles));\nconst Small = styled(Base).withConfig({\n  displayName: \"Button__Small\",\n  componentId: \"cvrf7p-1\"\n})([\"transition:background-color 0.6s linear;&:hover{background-color:#3d4ae61a;}\", \"\"], dumpStyles(styles.small));\nconst Tiny = styled(Base).withConfig({\n  displayName: \"Button__Tiny\",\n  componentId: \"cvrf7p-2\"\n})([\"\", \"\"], dumpStyles(styles.tiny));\nconst Big = styled(Base).withConfig({\n  displayName: \"Button__Big\",\n  componentId: \"cvrf7p-3\"\n})([\"\", \"\"], dumpStyles(styles.big));\nconst Nav = styled(Base).withConfig({\n  displayName: \"Button__Nav\",\n  componentId: \"cvrf7p-4\"\n})([\"position:relative;\", \" letter-spacing:6px;transition:all 0.6s cubic-bezier(0.075,0.82,0.165,1);&:after{content:\\\"\\\";position:absolute;bottom:-3px;left:0;height:1px;opacity:0;width:100%;background-color:white;transition:opacity 0.6s cubic-bezier(0.075,0.82,0.165,1);}&:focus{outline:none;}&:hover{&:after{opacity:1;}}\"], dumpStyles(styles.nav));\nexport default Button;","map":null,"metadata":{},"sourceType":"module"}