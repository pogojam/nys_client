{"ast":null,"code":"var _jsxFileName = \"/Users/ryanbreaux/Projects/Web/Clients/nps_v2/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport \"../lib/styles.css\"; // import ApolloClient from \"apollo-client\";\n// import { ApolloProvider } from \"@apollo/react-hooks\";\n// // import { InMemoryCache } from \"apollo-cache-inmemory\";\n// import { HttpLink } from \"apollo-link-http\";\n// import fetch from \"isomorphic-fetch\";\n// const httplink = new HttpLink({\n//   uri: \"http://localhost:3000/api\",\n// });\n// export const client = new ApolloClient({\n//   link: httplink,\n//   cache: new InMemoryCache(),\n//   fetch,\n// });\n\nexport default function MyApp({\n  Component,\n  pageProps\n}) {\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/ryanbreaux/Projects/Web/Clients/nps_v2/pages/_app.js"],"names":["MyApp","Component","pageProps"],"mappings":";;;;;;AAAA,OAAO,mBAAP,C,CACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASA,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACtD,SAAO,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD","sourcesContent":["import \"../lib/styles.css\";\n// import ApolloClient from \"apollo-client\";\n// import { ApolloProvider } from \"@apollo/react-hooks\";\n// // import { InMemoryCache } from \"apollo-cache-inmemory\";\n// import { HttpLink } from \"apollo-link-http\";\n// import fetch from \"isomorphic-fetch\";\n\n// const httplink = new HttpLink({\n//   uri: \"http://localhost:3000/api\",\n// });\n\n// export const client = new ApolloClient({\n//   link: httplink,\n//   cache: new InMemoryCache(),\n//   fetch,\n// });\n\nexport default function MyApp({ Component, pageProps }) {\n  return <Component {...pageProps} />;\n}\n"]},"metadata":{},"sourceType":"module"}