{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/ryanbreaux/Projects/Web/Clients/nps_v2/lib/blocks/dash/Calendar.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef } from \"react\";\nimport { Heading, Button } from \"../../components/\";\nimport { Calandar_Styles } from \"./Dash_Styles\";\nimport { Icon } from \"../../components/\";\nimport moment from \"moment\";\n\nvar buildWeek = function buildWeek() {\n  var daysInWeek = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"7\";\n  var week = [];\n\n  for (var i = 0; i < daysInWeek; ++i) {\n    week.push(moment().add(i, \"days\"));\n  }\n\n  return week;\n};\n\nvar sudo_event_data = {\n  time: \"8pm\",\n  teams: [{\n    name: \"Blue Devils\"\n  }, {\n    name: \"Hopchowda\"\n  }],\n  location: \"Royal Palms\"\n};\n\nvar Day = function Day(_ref) {\n  var date = _ref.date,\n      _ref$events = _ref.events,\n      events = _ref$events === void 0 ? [sudo_event_data] : _ref$events;\n  return __jsx(\"div\", {\n    className: \"Calendar_Day_Container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, __jsx(Heading, {\n    className: \"Calendar_Day_Heading\",\n    type: \"Sub\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, date), __jsx(\"div\", {\n    className: \"Calandar_Event_Container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, events.map(function (_ref2) {\n    var time = _ref2.time,\n        teams = _ref2.teams,\n        location = _ref2.location;\n    return __jsx(\"div\", {\n      className: \"Calandar_Event\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, __jsx(Heading, {\n      type: \"Small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, \" \", __jsx(Icon, {\n      className: \"Icon Clock\",\n      type: \"clock\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }), time), teams && __jsx(\"div\", {\n      className: \"Calandar_Event_Teams\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, __jsx(Heading, {\n      type: \"Small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, teams[0].name), \"vs\", __jsx(Heading, {\n      type: \"Small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, teams[1].name)), __jsx(Heading, {\n      type: \"Small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, \" @ \", location));\n  })));\n};\n\nvar Calendar = function Calendar(_ref3) {\n  var length = _ref3.length;\n  var Days = useRef(buildWeek(length));\n  console.log(Days);\n  return __jsx(Calandar_Styles, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, Days.current.map(function (day, i) {\n    return __jsx(Day, {\n      date: day.format(\"dddd/D\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }\n    });\n  }));\n};\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/ryanbreaux/Projects/Web/Clients/nps_v2/lib/blocks/dash/Calendar.js"],"names":["useRef","Heading","Button","Calandar_Styles","Icon","moment","buildWeek","daysInWeek","week","i","push","add","sudo_event_data","time","teams","name","location","Day","date","events","map","Calendar","length","Days","console","log","current","day","format"],"mappings":"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","sourcesContent":["import { useRef } from \"react\";\nimport { Heading, Button } from \"../../components/\";\nimport { Calandar_Styles } from \"./Dash_Styles\";\nimport { Icon } from \"../../components/\";\nimport moment from \"moment\";\n\nconst buildWeek = (daysInWeek = \"7\") => {\n  let week = [];\n  for (let i = 0; i < daysInWeek; ++i) {\n    week.push(moment().add(i, \"days\"));\n  }\n  return week;\n};\n\nconst sudo_event_data = {\n  time: \"8pm\",\n  teams: [{ name: \"Blue Devils\" }, { name: \"Hopchowda\" }],\n  location: \"Royal Palms\",\n};\n\nconst Day = ({ date, events = [sudo_event_data] }) => (\n  <div className={\"Calendar_Day_Container\"}>\n    <Heading className={\"Calendar_Day_Heading\"} type=\"Sub\">\n      {date}\n    </Heading>\n    <div className=\"Calandar_Event_Container\">\n      {events.map(({ time, teams, location }) => (\n        <div className=\"Calandar_Event\">\n          <Heading type=\"Small\">\n            {\" \"}\n            <Icon className=\"Icon Clock\" type=\"clock\" />\n            {time}\n          </Heading>\n          {teams && (\n            <div className=\"Calandar_Event_Teams\">\n              <Heading type=\"Small\">{teams[0].name}</Heading>\n              vs\n              <Heading type=\"Small\">{teams[1].name}</Heading>\n            </div>\n          )}\n          <Heading type=\"Small\"> @ {location}</Heading>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nconst Calendar = ({ length }) => {\n  const Days = useRef(buildWeek(length));\n  console.log(Days);\n  return (\n    <Calandar_Styles>\n      {Days.current.map((day, i) => {\n        return <Day date={day.format(\"dddd/D\")} />;\n      })}\n    </Calandar_Styles>\n  );\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}