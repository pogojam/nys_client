{"ast":null,"code":"var _jsxFileName = \"/Users/ryanbreaux/Projects/Web/Clients/nps_v2/lib/animations/spring.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, Children } from \"react\";\nimport { useObserver } from \"../interface/\";\nimport { buildThresholdList } from \"../util\";\nimport { useSpring, animated } from \"react-spring\"; // React Spring Animations\n\nconst slideInRight = state => ({\n  transform: `translateX(${state ? 0 : -100}%)`\n});\n\nconst slideInDown = state => ({\n  transform: `translateY(${state ? 0 : -100}%)`\n});\n\nconst slideInLeft = state => ({\n  transform: `translateX(${state ? 0 : 100}%)`\n});\n\nconst slideInBottom = state => ({\n  transform: `translateY(${state ? 0 : 100}%)`\n});\n\nconst fadeIn = state => ({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n}); // Wrappers\n\n\nconst FadeIn_Wrapper = ({\n  root,\n  children\n}) => {\n  const [ref, entries] = useObserver({\n    root: root.current,\n    threshold: buildThresholdList(20)\n  });\n  console.log(entries);\n  const [animation, setAnimation] = useSpring(() => ({\n    opacity: [0]\n  }));\n  useEffect(() => {\n    if (entries.isIntersectiong) {\n      setAnimation({\n        opacity: [entries.intersectionRatio]\n      });\n    }\n  });\n  console.log(\"Anim fire\");\n  return __jsx(animated.div, {\n    style: animation,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nconst spring = {\n  fadeIn,\n  slideInBottom,\n  slideInDown,\n  slideInLeft,\n  slideInRight,\n  FadeIn_Wrapper\n};\nexport default spring;","map":{"version":3,"sources":["/Users/ryanbreaux/Projects/Web/Clients/nps_v2/lib/animations/spring.js"],"names":["React","useEffect","Children","useObserver","buildThresholdList","useSpring","animated","slideInRight","state","transform","slideInDown","slideInLeft","slideInBottom","fadeIn","from","opacity","to","FadeIn_Wrapper","root","children","ref","entries","current","threshold","console","log","animation","setAnimation","isIntersectiong","intersectionRatio","spring"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,kBAAT,QAAmC,SAAnC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC,C,CAEA;;AACA,MAAMC,YAAY,GAAIC,KAAD,KAAY;AAC/BC,EAAAA,SAAS,EAAG,cAAaD,KAAK,GAAG,CAAH,GAAO,CAAC,GAAI;AADX,CAAZ,CAArB;;AAIA,MAAME,WAAW,GAAIF,KAAD,KAAY;AAC9BC,EAAAA,SAAS,EAAG,cAAaD,KAAK,GAAG,CAAH,GAAO,CAAC,GAAI;AADZ,CAAZ,CAApB;;AAIA,MAAMG,WAAW,GAAIH,KAAD,KAAY;AAC9BC,EAAAA,SAAS,EAAG,cAAaD,KAAK,GAAG,CAAH,GAAO,GAAI;AADX,CAAZ,CAApB;;AAIA,MAAMI,aAAa,GAAIJ,KAAD,KAAY;AAChCC,EAAAA,SAAS,EAAG,cAAaD,KAAK,GAAG,CAAH,GAAO,GAAI;AADT,CAAZ,CAAtB;;AAGA,MAAMK,MAAM,GAAIL,KAAD,KAAY;AACzBM,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADmB;AAIzBC,EAAAA,EAAE,EAAE;AACFD,IAAAA,OAAO,EAAE;AADP;AAJqB,CAAZ,CAAf,C,CASA;;;AAEA,MAAME,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AAC7C,QAAM,CAACC,GAAD,EAAMC,OAAN,IAAiBlB,WAAW,CAAC;AACjCe,IAAAA,IAAI,EAAEA,IAAI,CAACI,OADsB;AAEjCC,IAAAA,SAAS,EAAEnB,kBAAkB,CAAC,EAAD;AAFI,GAAD,CAAlC;AAKAoB,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BtB,SAAS,CAAC,OAAO;AACjDU,IAAAA,OAAO,EAAE,CAAC,CAAD;AADwC,GAAP,CAAD,CAA3C;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,OAAO,CAACO,eAAZ,EAA6B;AAC3BD,MAAAA,YAAY,CAAC;AACXZ,QAAAA,OAAO,EAAE,CAACM,OAAO,CAACQ,iBAAT;AADE,OAAD,CAAZ;AAGD;AACF,GANQ,CAAT;AAOAL,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEA,SACE,MAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAEC,SAArB;AAAgC,IAAA,GAAG,EAAEN,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF;AAKD,CAzBD;;AA2BA,MAAMW,MAAM,GAAG;AACbjB,EAAAA,MADa;AAEbD,EAAAA,aAFa;AAGbF,EAAAA,WAHa;AAIbC,EAAAA,WAJa;AAKbJ,EAAAA,YALa;AAMbU,EAAAA;AANa,CAAf;AASA,eAAea,MAAf","sourcesContent":["import React, { useEffect, Children } from \"react\";\nimport { useObserver } from \"../interface/\";\nimport { buildThresholdList } from \"../util\";\nimport { useSpring, animated } from \"react-spring\";\n\n// React Spring Animations\nconst slideInRight = (state) => ({\n  transform: `translateX(${state ? 0 : -100}%)`,\n});\n\nconst slideInDown = (state) => ({\n  transform: `translateY(${state ? 0 : -100}%)`,\n});\n\nconst slideInLeft = (state) => ({\n  transform: `translateX(${state ? 0 : 100}%)`,\n});\n\nconst slideInBottom = (state) => ({\n  transform: `translateY(${state ? 0 : 100}%)`,\n});\nconst fadeIn = (state) => ({\n  from: {\n    opacity: 0,\n  },\n  to: {\n    opacity: 1,\n  },\n});\n\n// Wrappers\n\nconst FadeIn_Wrapper = ({ root, children }) => {\n  const [ref, entries] = useObserver({\n    root: root.current,\n    threshold: buildThresholdList(20),\n  });\n\n  console.log(entries);\n  const [animation, setAnimation] = useSpring(() => ({\n    opacity: [0],\n  }));\n\n  useEffect(() => {\n    if (entries.isIntersectiong) {\n      setAnimation({\n        opacity: [entries.intersectionRatio],\n      });\n    }\n  });\n  console.log(\"Anim fire\");\n\n  return (\n    <animated.div style={animation} ref={ref}>\n      {children}\n    </animated.div>\n  );\n};\n\nconst spring = {\n  fadeIn,\n  slideInBottom,\n  slideInDown,\n  slideInLeft,\n  slideInRight,\n  FadeIn_Wrapper,\n};\n\nexport default spring;\n"]},"metadata":{},"sourceType":"module"}